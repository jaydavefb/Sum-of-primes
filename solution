//C#...
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace hackerrank_ProjectEuler_
{
    class Program
    {
        static long[] prevno;
        static long[] no;
        static bool primes(long x)
        {
            
            for (long i = 2; i <=Convert.ToInt64(Math.Sqrt(x)); i++)
            {
                if (x % i == 0) 
                {
                    return false;
                }
            }
            return true;
        }

        static long counts(long st, long end)
        {
            long ans = 0;
            if (st % 2 == 0)
            {
                st++;
            }
            for (long i = st; i <= end; i += 2)
            {
                if (primes(i))
                {
                    ans += i;
                }
            }
            return ans;
        }

        static int searchs(long num)
        {
            int low = 0;
            int high = no.Length - 1;
            while (low <= high)
            {
                int mid = (low + high) / 2;
                if (no[mid] == num) 
                {
                    return mid;
                }
                if (num < no[mid])
                {
                    high = mid - 1;
                }
                else
                {
                    low = mid + 1;
                }
            }
            
            return 0;
        }

        static void Main(string[] args)
        {
            int t = Convert.ToInt32(Console.ReadLine());
            prevno = new long[t];
            no = new long[t];
            long[] ans = new long[t];
            for (int i = 0; i < t; i++)
            {
                no[i] = Convert.ToInt64(Console.ReadLine());
                prevno[i] = no[i];
            }


            
            Array.Sort(no);
            long last = no[0];
            ans[0] = 5 + counts(4, no[0]);
            long prevcount = ans[0];
            for (int i = 0; i < t; i++)
            {
                ans[i] = prevcount + counts(last + 1, no[i]);
                last = no[i];
                prevcount = ans[i];
            }
            

            int[] indexx = new int[t];
            for (int i = 0; i < t; i++)
            {
                indexx[i] = searchs(prevno[i]);
            }
            
            for (int i = 0; i < t; i++)
            {
                int ts = indexx[i];
                Console.WriteLine(ans[ts]);
            }
            
        }
    }
}
